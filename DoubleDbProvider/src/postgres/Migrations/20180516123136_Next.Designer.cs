// <auto-generated />
using DoubleDbProvider.DomainPG;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DoubleDbProvider.DomainPG.Migrations
{
    [DbContext(typeof(PostgresDbContext))]
    [Migration("20180516123136_Next")]
    partial class Next
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Todos")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("DoubleDbProvider.Domain.Models.Kind", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("Kinds");
                });

            modelBuilder.Entity("DoubleDbProvider.Domain.Models.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Completed");

                    b.Property<decimal>("Cost")
                        .HasColumnType("money");

                    b.Property<DateTimeOffset>("CreateDate");

                    b.Property<short?>("KindId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("KindId");

                    b.ToTable("Todos");
                });

            modelBuilder.Entity("DoubleDbProvider.Domain.Models.Todo", b =>
                {
                    b.HasOne("DoubleDbProvider.Domain.Models.Kind", "Kind")
                        .WithMany("Todos")
                        .HasForeignKey("KindId");
                });
#pragma warning restore 612, 618
        }
    }
}
